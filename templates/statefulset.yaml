apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: keydb
  labels:
    app: keydb
spec:
  serviceName: keydb
  replicas: {{ .Values.replicas | len }}
  selector:
    matchLabels:
      app: keydb
  template:
    metadata:
      labels:
        app: keydb
    spec:
      initContainers:
        - name: setup-replication
          image: busybox
          command: ["/bin/sh", "-c"]
          args:
            - |
              POD_NAME=$(hostname)
              POD_INDEX=$(echo $POD_NAME | awk -F "-" '{print $NF}')
              REPLICATION_CONFIG="/etc/keydb/keydb-replica.conf"
              echo "replication for $POD_NAME" > $REPLICATION_CONFIG
              {{- range $index, $replica := .Values.replicas }}
              if [ "$POD_INDEX" -eq "{{ $index }}" ]; then
                {{- range $replica }}
                echo "replicaof {{ . }}" >> $REPLICATION_CONFIG
                {{- end }}
              fi
              {{- end }}
              cat /etc/keydb/keydb.conf /etc/keydb/keydb-replica.conf > /etc/keydb/final-keydb.conf
          volumeMounts:
            - name: config-volume
              mountPath: /etc/keydb
            - name: data
              mountPath: /data
      containers:
        - name: keydb
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          command: ["keydb-server", "/etc/keydb/final-keydb.conf"]
          ports:
            - containerPort: 6379
          volumeMounts:
            - name: config-volume
              mountPath: /etc/keydb
            - name: data
              mountPath: /data
      volumes:
        - name: config-volume
          configMap:
            name: keydb-config
        - name: data
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: {{ .Values.persistence.storageClass }}
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
