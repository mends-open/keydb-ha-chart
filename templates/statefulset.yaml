apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: keydb-replicas
spec:
  serviceName: keydb-service
  replicas: {{ .Values.replicaCount | int }}
  selector:
    matchLabels:
      app: keydb-replica
  template:
    metadata:
      labels:
        app: keydb-replica
    spec:
      containers:
        - name: keydb
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          ports:
            - containerPort: 6379
          volumeMounts:
            - name: keydb-storage
              mountPath: /data
            - name: config-volume
              mountPath: /etc/keydb/keydb.conf
              subPath: keydb.conf
          args:
            - "keydb-server"
            - "/etc/keydb/keydb.conf"
            {{- if gt .Values.replicaCount 1 }}
            {{- range $i, $e := until (int .Values.replicaCount) }}
            {{- if gt $i 0 }}
            - "--replicaof"
            - "{{ printf "%s-%d.%s.svc.cluster.local" (include "keydb.fullname" $) $i $.Release.Namespace }}"
            - "6379"
            {{- end }}
            {{- end }}
            {{- end }}
      volumes:
        - name: config-volume
          configMap:
            name: keydb-configmap
  volumeClaimTemplates:
    - metadata:
        name: keydb-storage
      spec:
        accessModes: 
          {{ .Values.persistence.accessModes | toYaml | indent 8 }}
        storageClassName: {{ .Values.persistence.storageClass | quote }}
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
