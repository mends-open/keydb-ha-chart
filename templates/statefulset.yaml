apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: keydb
  labels:
    app: keydb
spec:
  serviceName: keydb
  replicas: {{ .Values.configs | len }}
  selector:
    matchLabels:
      app: keydb
  template:
    metadata:
      labels:
        app: keydb
    spec:
      initContainers:
        - name: setup-config
          image: busybox
          command: ["/bin/sh", "-c"]
          args:
            - |
              POD_NAME=$(hostname)
              POD_INDEX=$(echo $POD_NAME | awk -F "-" '{print $NF}')
              cp /etc/keydb/configs/keydb-config-${POD_INDEX}.conf /etc/keydb/keydb.conf
          volumeMounts:
            - name: config-volume
              mountPath: /etc/keydb/configs
            - name: data
              mountPath: /data
      containers:
        - name: keydb
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          command: ["keydb-server", "/etc/keydb/keydb.conf"]
          ports:
            - containerPort: 6379
          volumeMounts:
            - name: config-volume
              mountPath: /etc/keydb
            - name: data
              mountPath: /data
      volumes:
        - name: config-volume
          projected:
            sources:
              {{- range $index, $config := .Values.configs }}
              - configMap:
                  name: keydb-config-{{ $index }}
                  items:
                    - key: keydb.conf
                      path: keydb-config-{{ $index }}.conf
              {{- end }}
        - name: data
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: {{ .Values.persistence.storageClass }}
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
